name: Build and Test

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        # Checks out the source code of your repository

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
        # Sets up the Node.js environment with the specified version

      - name: Install dependencies
        run: npm install
        # Installs the project dependencies using npm

      - name: Build Docker image
        run: docker build -t zadanie2 .
        # Builds a Docker image with the tag 'zadanie2'

      - name: Test Docker image for CVEs with Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          trivy --severity HIGH,CRITICAL zadanie2 || true
        # Downloads and installs Trivy, then scans the Docker image for Common Vulnerabilities and Exposures (CVEs)

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        # Logs in to GitHub Container Registry using the provided GitHub token

      # - name: Push Docker image to GitHub Packages
      #   run: docker tag zadanie2 ghcr.io/exokamiz/zadanie2 && docker push ghcr.io/exokamiz/zadanie2
      #   # Tags the Docker image as 'ghcr.io/exokamiz/zadanie2' and pushes it to GitHub Packages

      - name: Get latest image version
        id: get_version
        run: |
          echo "::set-output name=version::$(docker pull ghcr.io/exokamiz/zadanie2 | grep -oP '(?<=digest: ).*')"

      - name: Generate new image version
        id: generate_version
        run: |
          echo "::set-output name=version::$(python generate_version.py ${{ steps.get_version.outputs.version }})"

      - name: Tag and push Docker image
        run: |
          docker tag zadanie2 ghcr.io/exokamiz/zadanie2:${{ steps.generate_version.outputs.version }}
          docker push ghcr.io/exokamiz/zadanie2:${{ steps.generate_version.outputs.version }}
